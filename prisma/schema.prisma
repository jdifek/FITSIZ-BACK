
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  telegramId String   @unique
  firstName  String?
  phone      String?
  email      String?
    isBotAvailable  Boolean @default(false)
  quiz            Boolean  @default(false) // <--- новое поле

  maskId     Int?     @map("mask_id")
  mask       Mask?    @relation(fields: [maskId], references: [id])
  createdAt  DateTime @default(now())
}

model UserAdmin {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Mask {
  id           Int        @id @default(autoincrement())
  name         String
  instructions String?    // Инструкции
    extraFields ExtraField[]
  imageUrl     String?    // URL изображения
  price        String?    // Цена
  weight       String?    // Вес
  viewArea     String?    // Область обзора
  sensors      Int?       // Количество сенсоров
  power        String?    // Тип питания
  shadeRange   String?    // Диапазон затемнения
  material     String?    // Материал
  description  String?    // Описание (из CatalogItem)
  link         String?    // Ссылка (из CatalogItem)
  installment  String?    // Цена в рассрочку (из CatalogItem)
  size         String?    // Размер (из CatalogItem)
  days         String?    // Количество дней (из CatalogItem)
  features     Feature[]  // Связь с особенностями
  reviews      Review[]   // Связь с отзывами
  users        User[]     @relation // Связь с пользователями
}
model ExtraField {
  id      Int    @id @default(autoincrement())
  key     String
  value   String
  mask    Mask   @relation(fields: [maskId], references: [id])
  maskId  Int
}

model Setting {
  key   String @id
  value String
}

model Video {
  id           Int       @id @default(autoincrement())
  title        String
  url          String?   // URL видео
  description  String?   // Описание
  duration     String?   // Длительность
  thumbnailUrl String?   // URL миниатюры
}

model Feature {
  id        Int      @id @default(autoincrement())
  name      String   // Название особенности (например, "Автоматическое затемнение")
  maskId    Int      // Связь с маской
  mask      Mask     @relation(fields: [maskId], references: [id])
}

model Review {
  id         Int       @id @default(autoincrement())
  userName   String    // Имя пользователя
  rating     Float     // Рейтинг (например, 4.7)
  comment    String?   // Текст отзыва
  createdAt  DateTime  @default(now())
  maskId     Int?      // Связь с маской
  mask       Mask?     @relation(fields: [maskId], references: [id])
}
